{"version":3,"sources":["components/ImgCard.js","components/Board.js","components/GameController.js","App.js","index.js"],"names":["ImgCard","props","className","imgs","map","img","onClick","handleClick","name","src","source","alt","uniqid","Board","useState","setImgs","current","best","score","setScore","shuffleImgs","array","i","length","j","Math","floor","random","temp","resetScore","checkScore","index","clicked","resetImgs","resetImgClicked","useEffect","handleMode","message","maxScore","gameMessage","clickedIndex","findIndex","imgsCopy","imgClicked","GameController","easyImgs","medImgs","hardImgs","mode","setMode","handleProps","buttonMode","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAsBeA,MAnBf,SAAiBC,GAgBf,OAAO,qBAAKC,UAAU,WAAf,SAdED,EAAME,KAAKC,KAAI,SAACC,GACrB,OACE,sBAAoBH,UAAU,OAA9B,UACE,qBACEI,QAAS,kBAAML,EAAMM,YAAYF,EAAIG,OACrCC,IAAKJ,EAAIK,OACTC,IAAI,cAEN,4BAAIN,EAAIG,SANAI,aCmGHC,MAvGf,SAAeZ,GAAQ,IAAD,EACIa,mBAAS,YAAIb,EAAME,OADvB,mBACbA,EADa,KACPY,EADO,OAGMD,mBAAS,CAAEE,QAAS,EAAGC,KAAM,IAHnC,mBAGbC,EAHa,KAGNC,EAHM,KAKdC,EAAc,SAACC,GACnB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,SAAWL,GAC/BM,EAAOP,EAAMC,GACnBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,IAYTC,EAAa,WACjBV,EAAS,CAAEH,QAAS,EAAGC,KAAM,KAGzBa,EAAa,SAACC,GAClB,IAA4B,IAAxB5B,EAAK4B,GAAOC,QAGd,OAFAb,EAAS,2BAAKD,GAAN,IAAaF,QAAS,UAdV,WACtB,IAAMiB,EAAY9B,EAAKC,KAAI,SAACC,GAC1B,OAAO,2BAAKA,GAAZ,IAAiB2B,SAAS,OAE5BZ,EAAYa,GACZlB,EAAQkB,GAUNC,GAIEhB,EAAMF,UAAYE,EAAMD,KAC1BE,EAAS,CAAEH,QAASE,EAAMF,QAAU,EAAGC,KAAMC,EAAMF,QAAU,IAC1DG,EAAS,2BAAKD,GAAN,IAAaF,QAASE,EAAMF,QAAU,MAwBrD,OALAmB,qBAAU,WACRf,EAAYnB,EAAME,MAClBY,EAAQ,YAAId,EAAME,SACjB,CAACF,EAAME,OAGR,sBAAKD,UAAU,QAAf,UACE,sBAAKA,UAAU,SAAf,UACE,gCACE,qBAAKO,IAAI,gBAAgBE,IAAI,gBAC7B,+CAEF,sBAAKT,UAAU,QAAf,UACE,oBAAGA,UAAU,UAAb,oBAA+BgB,EAAMF,WACrC,oBAAGd,UAAU,OAAb,yBAAiCgB,EAAMD,cAG3C,sBAAKf,UAAU,WAAf,UACE,wBACEI,QAAS,WACPL,EAAMmC,WAAW,QACjBP,KAHJ,kBAQA,wBACEvB,QAAS,WACPL,EAAMmC,WAAW,OACjBP,KAHJ,oBAQA,wBACEvB,QAAS,WACPL,EAAMmC,WAAW,QACjBP,KAHJ,kBAQA,mBAAG3B,UAAU,UAAb,SAhDc,WAClB,IAAImC,EAA4B,IAAlBnB,EAAMF,SAAgC,IAAfE,EAAMD,MAAc,YAEzD,OADIC,EAAMF,UAAYf,EAAMqC,WAAUD,EAAU,YACzCA,EA6CqBE,QAE1B,cAAC,EAAD,CAASpC,KAAMA,EAAMI,YA5DL,SAACC,GACnB,IAAMgC,EAAerC,EAAKsC,WAAU,SAACpC,GAAD,OAASA,EAAIG,OAASA,KACtDkC,EAAQ,YAAOvC,GACbwC,EAAU,2BAAQxC,EAAKqC,IAAb,IAA4BR,SAAS,IACrDU,EAASF,GAAgBG,EACzBvB,EAAYsB,GACZ3B,EAAQ2B,GACRZ,EAAWU,UCoBAI,MAjEf,WAA2B,IAAD,EACL9B,mBAAS,CAC1B,CAAEN,KAAM,QAASE,OAAQ,mBAAoBsB,SAAS,GACtD,CAAExB,KAAM,OAAQE,OAAQ,kBAAmBsB,SAAS,GACpD,CAAExB,KAAM,SAAUE,OAAQ,oBAAqBsB,SAAS,GACxD,CAAExB,KAAM,QAASE,OAAQ,mBAAoBsB,SAAS,KAJjDa,EADiB,sBAQN/B,mBAAS,CACzB,CAAEN,KAAM,SAAUE,OAAQ,mBAAoBsB,SAAS,GACvD,CAAExB,KAAM,OAAQE,OAAQ,iBAAkBsB,SAAS,GACnD,CAAExB,KAAM,QAASE,OAAQ,kBAAmBsB,SAAS,GACrD,CAAExB,KAAM,UAAWE,OAAQ,oBAAqBsB,SAAS,GACzD,CAAExB,KAAM,QAASE,OAAQ,kBAAmBsB,SAAS,GACrD,CAAExB,KAAM,SAAUE,OAAQ,mBAAoBsB,SAAS,GACvD,CAAExB,KAAM,QAASE,OAAQ,kBAAmBsB,SAAS,GACrD,CAAExB,KAAM,WAAYE,OAAQ,qBAAsBsB,SAAS,GAC3D,CAAExB,KAAM,OAAQE,OAAQ,iBAAkBsB,SAAS,GACnD,CAAExB,KAAM,OAAQE,OAAQ,iBAAkBsB,SAAS,KAV9Cc,EARiB,sBAqBLhC,mBAAS,CAC1B,CAAEN,KAAM,SAAUE,OAAQ,mBAAoBsB,SAAS,GACvD,CAAExB,KAAM,UAAWE,OAAQ,qBAAsBsB,SAAS,GAC1D,CAAExB,KAAM,QAASE,OAAQ,mBAAoBsB,SAAS,GACtD,CAAExB,KAAM,UAAWE,OAAQ,qBAAsBsB,SAAS,GAC1D,CAAExB,KAAM,WAAYE,OAAQ,sBAAuBsB,SAAS,GAC5D,CAAExB,KAAM,WAAYE,OAAQ,sBAAuBsB,SAAS,GAC5D,CAAExB,KAAM,QAASE,OAAQ,mBAAoBsB,SAAS,GACtD,CAAExB,KAAM,OAAQE,OAAQ,kBAAmBsB,SAAS,GACpD,CAAExB,KAAM,SAAUE,OAAQ,oBAAqBsB,SAAS,GACxD,CAAExB,KAAM,UAAWE,OAAQ,oBAAqBsB,SAAS,GACzD,CAAExB,KAAM,UAAWE,OAAQ,qBAAsBsB,SAAS,GAC1D,CAAExB,KAAM,OAAQE,OAAQ,kBAAmBsB,SAAS,GACpD,CAAExB,KAAM,UAAWE,OAAQ,oBAAqBsB,SAAS,GACzD,CAAExB,KAAM,UAAWE,OAAQ,qBAAsBsB,SAAS,GAC1D,CAAExB,KAAM,QAASE,OAAQ,mBAAoBsB,SAAS,GACtD,CAAExB,KAAM,YAAaE,OAAQ,uBAAwBsB,SAAS,GAC9D,CAAExB,KAAM,OAAQE,OAAQ,kBAAmBsB,SAAS,GACpD,CAAExB,KAAM,QAASE,OAAQ,mBAAoBsB,SAAS,GACtD,CAAExB,KAAM,OAAQE,OAAQ,kBAAmBsB,SAAS,GACpD,CAAExB,KAAM,UAAWE,OAAQ,qBAAsBsB,SAAS,KApBrDe,EArBiB,sBA4CAjC,mBAAS,QA5CT,mBA4CjBkC,EA5CiB,KA4CXC,EA5CW,KAkDlBC,EAAc,WAClB,MAAa,SAATF,EAAwB,CAACH,EAAU,GACrB,QAATG,EAAuB,CAACF,EAAS,IACnC,CAACC,EAAU,KAGpB,OACE,cAAC,EAAD,CACEX,WAZe,SAACe,GAClBF,EAAQE,IAYNhD,KAAI,YAAM+C,IAAc,IACxBZ,SAAUY,IAAc,MCnDfE,MARf,WACE,OACE,qBAAKlD,UAAU,MAAf,SACE,cAAC,EAAD,OCHNmD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7ce2464b.chunk.js","sourcesContent":["import React from 'react';\nimport uniqid from 'uniqid';\n\nfunction ImgCard(props) {\n  const createCards = () => {\n    return props.imgs.map((img) => {\n      return (\n        <div key={uniqid()} className=\"card\">\n          <img\n            onClick={() => props.handleClick(img.name)}\n            src={img.source}\n            alt=\"game card\"\n          />\n          <p>{img.name}</p>\n        </div>\n      );\n    });\n  };\n\n  return <div className=\"allCards\">{createCards()}</div>;\n}\n\nexport default ImgCard;\n","import React, { useState, useEffect } from 'react';\nimport ImgCard from './ImgCard';\n\nfunction Board(props) {\n  const [imgs, setImgs] = useState([...props.imgs]);\n\n  const [score, setScore] = useState({ current: 0, best: 0 });\n\n  const shuffleImgs = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  const resetImgClicked = () => {\n    const resetImgs = imgs.map((img) => {\n      return { ...img, clicked: false };\n    });\n    shuffleImgs(resetImgs);\n    setImgs(resetImgs);\n  };\n\n  const resetScore = () => {\n    setScore({ current: 0, best: 0 });\n  };\n\n  const checkScore = (index) => {\n    if (imgs[index].clicked === true) {\n      setScore({ ...score, current: 0 });\n      resetImgClicked();\n      return;\n    }\n\n    if (score.current === score.best)\n      setScore({ current: score.current + 1, best: score.current + 1 });\n    else setScore({ ...score, current: score.current + 1 });\n  };\n\n  const handleClick = (name) => {\n    const clickedIndex = imgs.findIndex((img) => img.name === name);\n    let imgsCopy = [...imgs];\n    const imgClicked = { ...imgs[clickedIndex], clicked: true };\n    imgsCopy[clickedIndex] = imgClicked;\n    shuffleImgs(imgsCopy);\n    setImgs(imgsCopy);\n    checkScore(clickedIndex);\n  };\n\n  const gameMessage = () => {\n    let message = score.current === 0 && score.best !== 0 && 'Try Again';\n    if (score.current === props.maxScore) message = 'You Win!';\n    return message;\n  };\n\n  useEffect(() => {\n    shuffleImgs(props.imgs);\n    setImgs([...props.imgs]);\n  }, [props.imgs]);\n\n  return (\n    <div className=\"board\">\n      <div className=\"header\">\n        <div>\n          <img src=\"./favicon.ico\" alt=\"league icon\" />\n          <h1>LOL Memory</h1>\n        </div>\n        <div className=\"score\">\n          <p className=\"current\">Score: {score.current}</p>\n          <p className=\"best\">Best Score: {score.best}</p>\n        </div>\n      </div>\n      <div className=\"settings\">\n        <button\n          onClick={() => {\n            props.handleMode('easy');\n            resetScore();\n          }}\n        >\n          Easy\n        </button>\n        <button\n          onClick={() => {\n            props.handleMode('med');\n            resetScore();\n          }}\n        >\n          Medium\n        </button>\n        <button\n          onClick={() => {\n            props.handleMode('hard');\n            resetScore();\n          }}\n        >\n          Hard\n        </button>\n        <p className=\"message\">{gameMessage()}</p>\n      </div>\n      <ImgCard imgs={imgs} handleClick={handleClick} />\n    </div>\n  );\n}\n\nexport default Board;\n","import React, { useState } from 'react';\nimport Board from './Board';\n\nfunction GameController() {\n  const [easyImgs] = useState([\n    { name: 'Yasuo', source: './easy/Yasuo.jpg', clicked: false },\n    { name: 'Yone', source: './easy/Yone.jpg', clicked: false },\n    { name: 'Yorick', source: './easy/Yorick.jpg', clicked: false },\n    { name: 'Yuumi', source: './easy/Yuumi.jpg', clicked: false },\n  ]);\n\n  const [medImgs] = useState([\n    { name: 'Aatrox', source: './med/Aatrox.jpg', clicked: false },\n    { name: 'Ahri', source: './med/Ahri.jpg', clicked: false },\n    { name: 'Akali', source: './med/Akali.jpg', clicked: false },\n    { name: 'Alistar', source: './med/Alistar.jpg', clicked: false },\n    { name: 'Amumu', source: './med/Amumu.jpg', clicked: false },\n    { name: 'Anivia', source: './med/Anivia.jpg', clicked: false },\n    { name: 'Annie', source: './med/Annie.jpg', clicked: false },\n    { name: 'Aphelios', source: './med/Aphelios.jpg', clicked: false },\n    { name: 'Ashe', source: './med/Ashe.jpg', clicked: false },\n    { name: 'Azir', source: './med/Azir.jpg', clicked: false },\n  ]);\n\n  const [hardImgs] = useState([\n    { name: \"Kai'Sa\", source: './hard/KaiSa.jpg', clicked: false },\n    { name: 'Kalista', source: './hard/Kalista.jpg', clicked: false },\n    { name: 'Karma', source: './hard/Karma.jpg', clicked: false },\n    { name: 'Karthus', source: './hard/Karthus.jpg', clicked: false },\n    { name: 'Kassadin', source: './hard/Kassadin.jpg', clicked: false },\n    { name: 'Katarina', source: './hard/Katarina.jpg', clicked: false },\n    { name: 'Kayle', source: './hard/Kayle.jpg', clicked: false },\n    { name: 'Kayn', source: './hard/Kayn.jpg', clicked: false },\n    { name: 'Singed', source: './hard/Singed.jpg', clicked: false },\n    { name: \"Kha'Zix\", source: './hard/KhaZix.jpg', clicked: false },\n    { name: 'Kindred', source: './hard/Kindred.jpg', clicked: false },\n    { name: 'Kled', source: './hard/Kled.jpg', clicked: false },\n    { name: \"Kog'Maw\", source: './hard/KogMaw.jpg', clicked: false },\n    { name: 'Sejuani', source: './hard/Sejuani.jpg', clicked: false },\n    { name: 'Senna', source: './hard/Senna.jpg', clicked: false },\n    { name: 'Seraphine', source: './hard/Seraphine.jpg', clicked: false },\n    { name: 'Sett', source: './hard/Sett.jpg', clicked: false },\n    { name: 'Shaco', source: './hard/Shaco.jpg', clicked: false },\n    { name: 'Shen', source: './hard/Shen.jpg', clicked: false },\n    { name: 'Shyvana', source: './hard/Shyvana.jpg', clicked: false },\n  ]);\n\n  const [mode, setMode] = useState('easy');\n\n  const handleMode = (buttonMode) => {\n    setMode(buttonMode);\n  };\n\n  const handleProps = () => {\n    if (mode === 'easy') return [easyImgs, 4];\n    else if (mode === 'med') return [medImgs, 10];\n    return [hardImgs, 20];\n  };\n\n  return (\n    <Board\n      handleMode={handleMode}\n      imgs={[...handleProps()[0]]}\n      maxScore={handleProps()[1]}\n    />\n  );\n}\n\nexport default GameController;\n","import React from 'react';\nimport './App.css';\nimport GameController from './components/GameController';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <GameController />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}